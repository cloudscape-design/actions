name: release-gh-notes

on:
  workflow_call:
    inputs:
      version:
        required: true
        description: Specify the version for this release
        type: string
      npm_package:
        required: true
        description: npm package of the release
        type: string
      commit:
        required: false
        description: commit to generate release notes
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: install npm package
        run: npm install ${{ github.event.inputs.npm_package }}@${{ github.event.inputs.version }}
        shell: bash
      - name: Get manifest file
        id: manifest
        run: echo ::set-output name=manifest::$(cat node_modules/${{ github.event.inputs.npm_package }}/internal/manifest.json)
        shell: bash
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.manifest.outputs.manifest).commit }}
          fetch-depth: 0
      - name: Replace version in package.json
        run: |
          package_json="$(jq '.version = "${{ github.event.inputs.version }}"' package.json)" && \
          echo -E "${package_json}" > package.json
      - name: Generate changelog
        run: npx conventional-changelog-cli@2 -i CHANGELOG.md -s -p conventionalcommits
      - name: Get number of lines in CHANGELOG.md
        id: changelog
        run: echo ::set-output name=changelog_lines::$(wc -l < "CHANGELOG.md")
        shell: bash
      - name: Add empty release note
        run: echo "No customer visible changes in this release" >> CHANGELOG.md
        if: ${{ steps.changelog.outputs.changelog_lines <= 2 }}
      - name: Create Release
        run: gh release create ${{ github.event.inputs.version }} -F CHANGELOG.md --target ${{ fromJson(steps.manifest.outputs.manifest).commit }} --title "Release ${{ github.event.inputs.version }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
