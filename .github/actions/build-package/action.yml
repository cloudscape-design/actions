name: Build package
description: Builds a package
inputs:
  package:
    description: Name of the package
    required: true
  skip_lint:
    required: false
    type: boolean
    default: true    
  skip_tests:
    required: false
    type: boolean
    default: false

defaults:
  run:
    shell: bash

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.package }}
        path: ${{ inputs.package }}

    - name: Unlock dependencies
      working-directory: ${{ inputs.package }}
      uses: cloudscape-design/actions/.github/actions/unlock-dependencies@artifacts-v4

    - name: Download dependencies artifacts
      id: download-artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: cloudscape-design-*
        path: ./.cache
        merge-multiple: true

    - name: Install dependencies from local tarballs
      shell: bash
      working-directory: ${{ inputs.package }}
      run: |
        for package in $(ls ${{ steps.download-artifacts.outputs.download-path }}/*.tgz); do
          echo "Installing $package"
          npm install --no-save "$package"
        done

    - name: Install dependencies from npm
      shell: bash
      working-directory: ${{ inputs.package }}
      run: npm install

    - name: Build package
      shell: bash
      working-directory: ${{ inputs.package }}
      run: npm run build

    - name: Lint
      if: ${{ inputs.skip_lint != 'true' }}
      shell: bash
      run: npm run lint
      working-directory: ${{ inputs.package }}

    - name: Test
      if: ${{ inputs.skip_tests != 'true' && inputs.package != 'cloudscape-design/components' }}
      shell: bash
      run: npm run test
      working-directory: ${{ inputs.package }}

    - name: Test:components      
      if: ${{ inputs.skip_tests != 'true' && inputs.package == 'cloudscape-design/components' }}
      shell: bash
      run: npm run test:unit
      working-directory: ${{ inputs.package }}

    - name: Cache lib folder
      uses: actions/cache@v4
      with:
        path: ${{ inputs.package }}/lib
        key: ${{ runner.os }}-lib-${{ inputs.package }}-${{ github.sha }}

    - name: Package lib
      shell: bash
      working-directory: ${{ inputs.package }}
      run: |
        cd ./lib
        if [ -f "package.json" ]; then
          # If there's a package.json in ./lib, just pack it here
          echo "Found package.json in ./lib, running npm pack in ./lib"
          npm pack
        else
          # Otherwise, iterate through subdirectories and pack if package.json exists
          echo "No package.json found in ./lib, iterating through subdirectories"
          for dir in */; do
            if [ -f "$dir/package.json" ]; then
              cd "$dir"
              npm pack
              mv *.tgz ../
              cd ..
            else
              echo "No package.json in $dir, skipping npm pack"
            fi
          done
        fi

    - name: Sanitize package name
      shell: bash
      id: sanitize
      run: |
        SANITIZED_NAME=$(echo "${{ inputs.package }}" | sed 's/@//g' | sed 's/\//-/g')
        echo "sanitized_name=$SANITIZED_NAME" >> $GITHUB_OUTPUT

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.sanitize.outputs.sanitized_name }}
        path: ${{ inputs.package }}/lib/*.tgz