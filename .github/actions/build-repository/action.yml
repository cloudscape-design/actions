name: Build repository
description: Builds a repository
inputs:
  repository:
    description: Name of the repository
    required: true
  ref:
    description: The branch, tag or SHA to checkout
    required: false
    default: ''
  skip-lint:
    required: false
    type: boolean
    default: false
  skip-tests:
    required: false
    type: boolean
    default: false
  skip-build-artifact:
    required: false
    type: boolean
    default: false
  artifact-path:
    type: string
    description: An optional file, directory or wildcard pattern that describes what to upload
    default: ''
  artifact-name:
    type: string
    description: An optional artifact name. Required when artifact-path is specified
    default: ''
  env-vars:
    type: string
    description: Environment variables to set during build
    required: false
    default: ''

defaults:
  run:
    shell: bash

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref || '' }}
    - name: Set-up node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download dependencies artifacts
      id: download-artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: cloudscape-design-*
        path: ./.build-cache
        merge-multiple: true

    - name: Patch local dependencies
      uses: cloudscape-design/actions/.github/actions/patch-local-dependencies@main
      with:
        path: ${{ github.workspace }}

    - name: Unlock dependencies
      uses: cloudscape-design/actions/.github/actions/unlock-dependencies@main
    - name: Install
      shell: bash
      run: npm install
    - name: Build
      shell: bash
      run: ALWAYS_VISUAL_REFRESH=true npm run build
    - name: Lint
      if: ${{ inputs.skip-lint != 'true' }}
      shell: bash
      run: npm run lint
    - name: Test
      if: ${{ inputs.skip-tests != 'true' && inputs.repository != 'cloudscape-design/components' }}
      shell: bash
      run: npm run test
    - name: Test:Unit
      if: ${{ inputs.skip-tests != 'true' && inputs.repository == 'cloudscape-design/components' }}
      shell: bash
      run: npm run test:unit

    - name: Package lib
      shell: bash
      run: |
        cd ./lib
        if [ -f "package.json" ]; then
          # If there's a package.json in ./lib, just pack it here
          echo "Found package.json in ./lib, running npm pack in ./lib"
          npm pack
        else
          # Otherwise, iterate through subdirectories and pack if package.json exists
          echo "No package.json found in ./lib, iterating through subdirectories"
          for dir in */; do
            if [ -f "$dir/package.json" ]; then
              cd "$dir"
              npm pack
              mv *.tgz ../
              cd ..
            else
              echo "No package.json in $dir, skipping npm pack"
            fi
          done
        fi

    - name: Sanitize package name
      shell: bash
      id: sanitize
      run: |
        SANITIZED_NAME=$(echo "${{ inputs.repository }}" | sed 's/@//g' | sed 's/\//-/g')
        echo "sanitized_name=$SANITIZED_NAME" >> $GITHUB_OUTPUT
        echo "SANITIZED_NAME=$SANITIZED_NAME"

    - name: Upload build artifacts
      if: ${{ inputs.skip-build-artifact != 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.sanitize.outputs.sanitized_name }}
        path: lib/*.tgz

    - name: Upload additional artifacts
      if: ${{ always() && inputs.artifact-path != '' && inputs.artifact-name != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-path }}
